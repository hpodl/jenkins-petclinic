---
- name: Set up bastion instance and initialize db through it
  hosts: bastion
  remote_user: ec2-user
  vars_files:
    - ./tf_variables.yaml
  tasks:
    - name: Set up connections to webserver instances
      block:
        - name: Copy webserver key
          ansible.builtin.copy:
            src: '{{ playbook_dir }}/webserver_key'
            dest: /home/ec2-user/
            mode: "0600"
        - name: Copy monitoring key
          ansible.builtin.copy:
            src: '{{ playbook_dir }}/monitoring_key'
            dest: /home/ec2-user/
            mode: "0600"

    - name: Configure mysql database schema
      block:
        - name: Update or install mariadb
          become: true
          ansible.builtin.package:
            name: mariadb105-server.x86_64

        - name: Move script file
          ansible.builtin.copy:
            src: '{{ playbook_dir }}/user.sql'
            dest: /home/ec2-user/user.sql
            mode: "0644"

        - name: Run mysql command
          become: true
          ansible.builtin.shell: mariadb --host={{ db_url }} --port=3306 --user={{ db_user }} --password={{ db_password }} < /home/ec2-user/user.sql
          changed_when: true

    - name: Set up remote ansible for quick patching through a pipeline
      block:
        - name: Download ansible
          become: true
          ansible.builtin.package:
            name: ansible

        - name: Copy inventory file, variables and playbook
          ansible.builtin.copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: "0644"
          loop:
            - src: '{{ playbook_dir }}/inventory'
              dest: /home/ec2-user/
            - src: '{{ playbook_dir }}/patch-app-playbook.yaml'
              dest: /home/ec2-user/
            - src: '{{ playbook_dir }}/tf_variables.yaml'
              dest: '/home/ec2-user/'

        - name: Remove bastion from inventory
          ansible.builtin.lineinfile:
            path: /home/ec2-user/inventory
            search_string: bastion
            state: absent

- name: Set up web servers
  hosts: webservers
  remote_user: ec2-user # for simplicity

  vars:
    docker_image: mydockertestacc/main:{{ IMG_TAG }}
  vars_files:
    - ./tf_variables.yaml

  tasks:
    - name: Update or install docker
      become: true
      ansible.builtin.package:
        name: docker

    - name: Start and enable docker daemon
      become: true
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Pull docker image
      become: true
      community.docker.docker_image:
        name: '{{ docker_image }}'
        source: pull
        pull:
          platform: amd64

    - name: Run docker image
      become: true
      community.docker.docker_container:
        name: webserver_container
        image: '{{ docker_image }}'
        state: started
        published_ports:
          - 80:8080
          - 8088:8088
        env:
          RUN_PROFILE: mysql
          MYSQL_URL: "jdbc:mysql://{{ db_url }}/petclinic"
          MYSQL_USER: '{{ db_user }}'
          MYSQL_PASS: '{{ db_password }}'

- name: Set up monitoring instance
  hosts: monitoring
  remote_user: ec2-user
  vars_files:
    - ./tf_variables.yaml
  roles:
    - role: prometheus.prometheus.prometheus
      tags: ['config']
      prometheus_scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']
        - job_name: 'java_jmx'
          metrics_path: /metrics
          static_configs:
            - targets: '{{ webserver_ips | product([":8088"]) | map("join") | list }}'
      prometheus_alertmanager_config:
        - scheme: http
          static_configs:
            - targets: ['localhost:9093']

  tasks:
    - name: Install and launch Grafana
      block:
        - name: Download Grafana
          ansible.builtin.get_url:
            url: 'https://dl.grafana.com/enterprise/release/grafana-enterprise-10.2.2-1.x86_64.rpm'
            dest: /tmp
            checksum: sha256:8cb0209623c3a48c23bc58bfab7bf5467853331309338098e9c9a7962687fd58
            mode: "0644"

        - name: Install Grafana
          become: true
          ansible.builtin.yum:
            name: /tmp/grafana-enterprise-10.2.2-1.x86_64.rpm
            state: present
            disable_gpg_check: true

        - name: Reload systemd daemon
          become: true
          ansible.builtin.systemd:
            daemon_reload: true

        - name: Start and enable Grafana
          become: true
          ansible.builtin.service:
            name: grafana-server
            state: started
            enabled: true

    # - name: Install and launch Prometheus
    #   block:
    #     - name: Download Prometheus
    #       ansible.builtin.get_url:
    #         url: 'https://github.com/prometheus/prometheus/releases/download/v2.48.1/prometheus-2.48.1.linux-amd64.tar.gz'
    #         dest: /tmp
    #         checksum: sha256:5d58b52ccfeff25700bc8d14ecc1235cbf112a05041e3b2f6900d16b44856f6f
    #         mode: "0644"

    #     - name: Install Prometheus
    #       become: true
    #       ansible.builtin.yum:
    #         name: /tmp/prometheus-2.48.1.linux-amd64.tar.gz
    #         state: present
    #         disable_gpg_check: true

    #     - name: Reload systemd daemon
    #       become: true
    #       ansible.builtin.systemd:
    #         daemon_reload: true

    #     - name: Start and enable Prometheus
    #       become: true
    #       ansible.builtin.service:
    #         name: prometheus
    #         state: started
    #         enabled: true
